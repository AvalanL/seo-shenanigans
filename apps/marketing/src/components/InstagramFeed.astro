---
interface Props {
  username: string;
  title: string;
  maxPosts?: number;
}

const { username, title, maxPosts = 6 } = Astro.props;

// Ta bort @ och URL-delar om de finns
const cleanUsername = username.replace(/^@/, '').replace(/^https?:\/\/(www\.)?instagram\.com\//, '');
---

<section class="instagram-feed">
  <h2>Senaste fr√•n Instagram</h2>

  <div class="instagram-grid" data-username={cleanUsername} data-max-posts={maxPosts}>
    <div class="loading-placeholder">
      <p>Laddar bilder fr√•n Instagram...</p>
      <div class="loading-spinner"></div>
    </div>
  </div>

  <div class="instagram-cta">
    <a
      href={`https://instagram.com/${cleanUsername}`}
      target="_blank"
      rel="noopener"
      class="instagram-link"
    >
      F√∂lj @{cleanUsername} p√• Instagram
    </a>
  </div>
</section>

<script>
  // Enkel Instagram feed loader
  class InstagramFeed {
    constructor(element) {
      this.element = element;
      this.username = element.dataset.username;
      this.maxPosts = parseInt(element.dataset.maxPosts) || 6;
      this.init();
    }

    async init() {
      try {
        // F√∂rs√∂k med flera olika metoder
        const images = await this.fetchInstagramImages();

        if (images.length > 0) {
          this.renderImages(images);
        } else {
          this.showFallback();
        }
      } catch (error) {
        console.warn('Instagram feed kunde inte laddas:', error);
        this.showFallback();
      }
    }

    async fetchInstagramImages() {
      // Metod 1: Prova Instagram's publika JSON endpoint
      try {
        const response = await fetch(`https://www.instagram.com/${this.username}/?__a=1&__d=dis`);

        if (response.ok) {
          const data = await response.json();
          const posts = data?.graphql?.user?.edge_owner_to_timeline_media?.edges || [];

          return posts.slice(0, this.maxPosts).map(post => ({
            url: post.node.display_url,
            thumbnail: post.node.thumbnail_src,
            caption: post.node.edge_media_to_caption.edges[0]?.node.text || '',
            permalink: `https://instagram.com/p/${post.node.shortcode}/`
          }));
        }
      } catch (e) {
        console.log('Metod 1 misslyckades:', e.message);
      }

      // Metod 2: Fallback till statiska bilder fr√•n v√•r scraper
      // (om vi har sparat n√•gra tidigare)
      const savedImages = this.getSavedImages();
      if (savedImages.length > 0) {
        return savedImages;
      }

      return [];
    }

    getSavedImages() {
      // Kontrollera om vi har sparade bilder fr√•n tidigare scraping
      const galleryElement = document.querySelector(`[data-supplier="${this.username}"]`);
      if (galleryElement) {
        const images = JSON.parse(galleryElement.dataset.images || '[]');
        return images.map(img => ({
          url: img,
          thumbnail: img,
          caption: '',
          permalink: `https://instagram.com/${this.username}/`
        }));
      }
      return [];
    }

    renderImages(images) {
      const html = images.map(img => `
        <div class="instagram-post">
          <a href="${img.permalink}" target="_blank" rel="noopener">
            <img src="${img.thumbnail || img.url}" alt="${img.caption}" loading="lazy" />
            <div class="post-overlay">
              <span class="view-on-instagram">Visa p√• Instagram</span>
            </div>
          </a>
        </div>
      `).join('');

      this.element.innerHTML = html;
    }

    showFallback() {
      this.element.innerHTML = `
        <div class="instagram-fallback">
          <div class="fallback-grid">
            ${Array(this.maxPosts).fill(0).map(() => `
              <div class="placeholder-post">
                <div class="placeholder-image"></div>
              </div>
            `).join('')}
          </div>
          <p class="fallback-text">
            <a href="https://instagram.com/${this.username}" target="_blank" rel="noopener">
              Visa senaste bilder p√• Instagram ‚Üí
            </a>
          </p>
        </div>
      `;
    }
  }

  // Initiera alla Instagram feeds p√• sidan
  document.addEventListener('DOMContentLoaded', () => {
    const feeds = document.querySelectorAll('.instagram-grid');
    feeds.forEach(feed => new InstagramFeed(feed));
  });
</script>

<style>
  .instagram-feed {
    margin-top: 3rem;
    padding: 2rem;
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 1rem;
    background: linear-gradient(45deg, #f09433 0%, #e6683c 25%, #dc2743 50%, #cc2366 75%, #bc1888 100%);
    background-size: 100% 4px;
    background-repeat: no-repeat;
    background-position: top;
    background-color: #fafafa;
  }

  .instagram-feed h2 {
    margin-bottom: 1.5rem;
    color: #1f1c14;
    font-size: 1.5rem;
    text-align: center;
  }

  .instagram-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .instagram-post {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
    border-radius: 0.75rem;
    background: #f5f5f5;
  }

  .instagram-post a {
    display: block;
    width: 100%;
    height: 100%;
    text-decoration: none;
  }

  .instagram-post img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .post-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .view-on-instagram {
    color: white;
    font-weight: 600;
    font-size: 0.9rem;
  }

  .instagram-post:hover .post-overlay {
    opacity: 1;
  }

  .instagram-post:hover img {
    transform: scale(1.05);
  }

  .loading-placeholder {
    grid-column: 1 / -1;
    text-align: center;
    padding: 2rem;
  }

  .loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #e6683c;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 1rem auto;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .instagram-fallback {
    grid-column: 1 / -1;
  }

  .fallback-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .placeholder-post {
    aspect-ratio: 1;
    border-radius: 0.75rem;
    background: #f0f0f0;
  }

  .placeholder-image {
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, #f0f0f0 25%, #e0e0e0 25%, #e0e0e0 50%, #f0f0f0 50%, #f0f0f0 75%, #e0e0e0 75%);
    background-size: 20px 20px;
    border-radius: 0.75rem;
    opacity: 0.6;
  }

  .fallback-text {
    text-align: center;
  }

  .fallback-text a {
    color: #1f1c14;
    font-weight: 600;
    text-decoration: none;
    padding: 1rem 2rem;
    background: white;
    border-radius: 999px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    display: inline-block;
    transition: transform 0.2s ease;
  }

  .fallback-text a:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  .instagram-cta {
    text-align: center;
    margin-top: 1.5rem;
  }

  .instagram-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: linear-gradient(45deg, #f09433 0%, #e6683c 25%, #dc2743 50%, #cc2366 75%, #bc1888 100%);
    color: white;
    text-decoration: none;
    border-radius: 999px;
    font-weight: 600;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .instagram-link:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(240, 148, 51, 0.3);
  }

  .instagram-link::before {
    content: "üì∏";
  }

  @media (min-width: 768px) {
    .instagram-grid,
    .fallback-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .instagram-grid,
    .fallback-grid {
      grid-template-columns: repeat(6, 1fr);
    }
  }
</style>