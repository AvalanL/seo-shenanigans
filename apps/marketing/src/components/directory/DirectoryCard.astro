---
export interface Props {
  title: string;
  summary: string;
  city: string;
  region?: string;
  startPrice?: number;
  capacity?: number;
  style?: string;
  image?: string;
  href: string;
  categoryLabel?: string;
}

const { title, summary, city, region, startPrice, capacity, image, href, categoryLabel, style } = Astro.props;
---
<article class="card" data-city={city} data-region={region} data-start-price={startPrice} data-style={style} data-capacity={capacity}>
  <a href={href} class="card-inner">
    <div class="media">
      {image ? <img src={image} alt={title} loading="lazy" /> : <div class="placeholder">Ingen bild</div>}
      {categoryLabel && <span class="badge">{categoryLabel}</span>}
    </div>
    <div class="body">
      <h3>{title}</h3>
      <p class="location">{city}{region ? `, ${region}` : ""}</p>
      <p class="summary">{summary}</p>
      <dl class="meta">
        {typeof capacity === "number" && capacity > 0 && (
          <div>
            <dt>Kapacitet</dt>
            <dd>{capacity} gäster</dd>
          </div>
        )}
        {typeof startPrice === "number" && startPrice > 0 && (
          <div>
            <dt>Startpris</dt>
            <dd>{startPrice.toLocaleString("sv-SE")} kr</dd>
          </div>
        )}
        {style && (
          <div>
            <dt>Stil</dt>
            <dd>{style}</dd>
          </div>
        )}
      </dl>
      <span class="cta">Se detaljer →</span>
    </div>
  </a>
</article>

<style>
  .card {
    border: 1px solid rgba(0, 0, 0, 0.12);
    border-radius: 1.5rem;
    overflow: hidden;
    background: #fff;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .card:hover {
    transform: translateY(-4px);
    box-shadow: 0 16px 30px rgba(0, 0, 0, 0.08);
  }

  .card-inner {
    display: grid;
    grid-template-rows: auto 1fr;
    color: inherit;
    text-decoration: none;
    height: 100%;
  }

  .media {
    position: relative;
    aspect-ratio: 4 / 3;
    background: #f4efe8;
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    color: rgba(31, 28, 20, 0.6);
    font-weight: 600;
    height: 100%;
  }

  .badge {
    position: absolute;
    top: 12px;
    left: 12px;
    background: rgba(178, 109, 74, 0.9);
    color: #fff;
    padding: 0.4rem 0.8rem;
    border-radius: 999px;
    font-size: 0.75rem;
    letter-spacing: 0.08em;
    text-transform: uppercase;
  }

  .body {
    padding: 1.5rem;
    display: grid;
    gap: 0.6rem;
  }

  h3 {
    margin: 0;
    font-size: 1.2rem;
  }

  .location {
    margin: 0;
    color: rgba(31, 28, 20, 0.65);
    font-weight: 500;
  }

  .summary {
    margin: 0;
    color: rgba(31, 28, 20, 0.75);
  }

  .meta {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 0.6rem;
    margin: 0;
  }

  dt {
    font-size: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.08em;
    color: rgba(31, 28, 20, 0.5);
  }

  dd {
    margin: 0.2rem 0 0;
    font-weight: 600;
  }

  .cta {
    margin-top: 0.5rem;
    font-weight: 600;
    color: #b26d4a;
  }
</style>
